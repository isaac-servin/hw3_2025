/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover, nav a:focus{
  text-decoration: underline;
}
.container {
  grid-template-areas: 
     "header"
     "nav"
     "main"
     "sidebar"
     "footer";
  grid-template-columns: 1fr;
  grid-template-rows: auto auto auto auto auto;
  width: 100%;}


  /* Step 9: Write the selector/rule property to style the nav element */
  nav {
  justify-content: space-around;
  align-items: center;
  }

 
  /* Step 10: Write the selector/rule property to update the .container class */
  .container {
     padding: 0;
  }


  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
nav {
border-radius: 0 0 10px 10px;
}
.text-block {
border-radius: 0;
}



 /* Step 13:Write the selector/rule property to update the .text-block class */
.text-block {
  margin: 0;
  padding: 0;
  }

  /* Add styles for .overview in mobile view */
  .overview {
    height: auto; /* Adjust height for mobile view */
    width: 100%; /* Ensure it takes full width */
  }

  .overview h1, .overview p {
    position: relative; /* Use relative positioning */
    transform: none; /* Remove transform */
    margin: 10px 0; /* Add margin for spacing */
    top: auto; /* Reset top */
    left: auto; /* Reset left */
  }


/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip {
  position: absolute;
  top: -40px; /* Positioned 40px above the top of its parent */
  left: 0;
  z-index: 1;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip a:focus {
  position: absolute;
  top: 20px;
  left: 0;
  z-index: 1;
}
h1{
  color: white;
  text-align: center;
}
p{
  color: black;
  text-align: center;
}
h2{
  text-align: center;
  width: 100%;
}
.text-block {
  display: block;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: #f0f0f0;
  border-radius: 10px;
  padding: 10px;
  margin: 10px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
  outline: 2px solid #f00;
}

/* Step 4: Write selector/rule property to style the container */
.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-template-rows: repeat(5,auto);
  gap: 15px;
  margin: 0 auto;
  max-width: 1200px;
  background-color: grey;
  border: 1px solid #000;
}
.container > *:first-child{
     grid-column: 1 / -1;
     background: url('images/header.jpg') no-repeat center center fixed;
     background-size: cover;
}
.about, .method, .clients, .contact {
      grid-column: 2 / 3;
      grid-column-start: 2;
      grid-column-end: 3;
}
.about {
     grid-row: 2;
}
   
.method {
     grid-row: 3;
}
   
.clients {
     grid-row: 4;
}
   
.contact {
     grid-row: 5;
}
.about-image, .method-image, .clients-image, .contact-image {
     grid-column: 1 / -1;
     max-height: 600px;
     overflow: hidden;
}
   
.about-image {
     grid-row: 2;
}
   
.method-image {
     grid-row: 3;
}
   
.clients-image {
     grid-row: 4;
}
   
.contact-image {
     grid-row: 5;
}

   

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.overview {
  position: relative; /* Add this line */
  background-attachment: fixed;
  background-image: url("images/header.jpg");
  background-size: cover;
  background-position: center;
  border-radius: 10px 10px 0 0;
  text-align: center;
}

.overview h1 {
  position: absolute;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -80%);
  color: white;
  margin: 0;
  padding: 10px 0;
}

.overview p {
  position: absolute;
  top: 50%; 
  left: 50%;
  transform: translate(-50%, -20%);
  color: white;
  margin: 0;
  padding: 10px 0;
}

.overview img {
  max-width: 100%;
  max-height: 100%;
  height: 100%;
  width: 100%;
  object-fit: none;
}
.overview h1{
  color: white;
  margin: 0;
}
.overview p{
  color: white;
  margin: 0;
  padding: 10px 0;
  
}



@media (min-width: 800px) {
  nav{
    justify-items: right;
    padding: 30px 0px 30px 0px;
    text-align: '-webkit-auto';
    }
   
  .container {
    grid-template-columns: 50px auto 500px auto 50px;
  }
   
  .about, .clients, .method-image, .contact-image {
    grid-column: 3 / 5;
    grid-column-start: 3;
    grid-column-end: 5;
  }
   
  .method, .contact, .about-image, .clients-image {
    grid-column: 2 / 4;
    grid-column-start: 2;
    grid-column-end: 4;
  }
   
  .text-block {
    max-height: 250px;
    overflow: auto;
  }
}




/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/


 /* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
  background-color: #f0f0f0;
  border-radius: 10px;
  padding: 10px;
  margin: 10px;
  align-self: center;
}


/* Add your media query here */

footer > p{
  color: white;
}

